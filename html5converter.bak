#!/bin/bash
# HTML5 video converter
# ---------------------------------------------------------------------

time_start_total=`date +%s`
RAWVIDEO=false
if [ -d "$1" ]
then
    JSONFILE="/opt/drivers/data.json"
     
    # Move to target directory
    cd "$1"
        
    ### Loop all image folders / days ###
    for i in $1/*
    do
 
             
        # Get current folder name
        filename_original=$(basename "$i")
        filename=${filename_original%.*}
        filename=${filename//[ ()$+&\.\-\'\,]/}
        # filename=${filename,,}
        extension=${filename_original##*.}

        target="/opt/stream/drivers/$filename"
        
        # Create target directory
        if [ ! -d "$target" ]; then mkdir -p $target; fi

		#cp	"$i" "$target"
                
        cd "$target/"

		source="$i"


        duration=$(avconv -i "$source" 2>&1 | grep Duration | awk '{print $2}' | tr -d ,)
        video=$(avconv -i "$source" 2>&1 | grep Video | awk '{print $2}' | tr -d ,)
        audio=$(avconv -i "$source" 2>&1 | grep Audio | awk '{print $2}' | tr -d ,)
		
        minutes=${duration%:*}
        hours=${minutes%:*}
        minutes=${minutes##*:}
        seconds=${duration##*:}
        seconds=${seconds%.*}
    
        hours=$((hours*3600))
        minutes=$((minutes*60))
     
        total=$(expr $hours + $minutes + $seconds)
        number=$RANDOM
        let "number %= $total"

		T="$filename.txt"
        echo "name= $filename_original">$T
        echo "frames= $total">>$T
        echo "duration= $duration">>$T
        echo "source= $source">>$T
        echo "extension= $extension">>$T
        echo "target= $filename">>$T
        echo "video= $video">>$T
        echo "audio= $audio">>$T
        
        echo -e $(avconv -i "$source" 2>&1)>>$T
		
		echo "***********************************"       
        echo "$source ($extension)"
		echo "***********************************"


		# Create RAW audio file
		saudio="$filename.mp2"
		if [ ! $RAWVIDEO ]
		then
			echo "***** Skip: $saudio *****"
			#saudio=${source}
		elif [ ! -f "$webm" ]
		then
			echo "***** Exist: $saudio *****"
		else
			time_start=`date +%s`
			echo "***** Convert: $saudio: "		
			avconv -i ${source} -r 24  ${saudio}
			time_end=`date +%s`
			time_elapsed=$((time_end - time_start))    
			echo "Done: " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s " *****"
	        echo "$saudio= " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s >>$T
		fi
		

		# Create RAW source file
		svideo="$filename.y4m"
		#svideo="$filename.yuv"
		if [ ! -f "$webm" ]
		then
			echo "***** Skip: $svideo *****"
			#svideo=${source}
		elif [ -f "$svideo" ]
		then
			echo "***** Exist: $svideo *****"
		else		
			time_start=`date +%s`
			echo "***** Convert: $svideo: "
			
			#avconv  -i $source  -s hd1080 -acodec libvorbis -vcodec libx264 $svideo
			#avconv  -i "$source"  -pix_fmt yuv420p -vcodec libx264  ${svideo}
			#avconv  -i ${source}  -r 24 -f yuv4mpegpipe -pix_fmt yuv420p ${svideo}
			#avconv  -i "$source" -f yuv4mpegpipe -pix_fmt yuv420p $svideo
			avconv   -i $source -r 24 -f yuv4mpegpipe -pix_fmt yuv420p -vcodec libx264 $svideo
			#avconv -i "$source" -c:a libvorbis -c:v libx264  "$svideo"
			#avconv -i $saudio -acodec libvorbis -ab 96k -vcodec libx264  -i $source   $svideo
			#source=${source}

			time_end=`date +%s`
			time_elapsed=$((time_end - time_start))    
			echo "Done: " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s " *****"
			echo "$svideo= " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s >>$T			
		fi
		#svideo=${source}		
		
        # Create mp4 if not same source
        mp4="$filename.mp4"
        if [ -f "$mp4" ]
        then
        	echo "***** Exist: $mp4"
		elif [ "$extension" == "mp4" ]
        then
			cp "$source" "$mp4"
			echo "***** Copy: $mp4"
		else           
   			time_start=`date +%s`
			echo "***** Convert: $mp4"
   			
			#avconv -i "$source" -acodec libvorbis -ab 96k -vcodec libx264 -level 21 -refs 2 -b:v 345k -bt 345k -threads 0 -y "$mp4"	
			#avconv -i "$source" -acodec libvorbis -ab 96k  -vcodec libx264 "/tmp/$mp4"	
			avconv -qmin 1 -qmax 51 -i "$source" -vcodec libx264 "$mp4"
			#avconv -i $saudio -qmin 1 -qmax 51 -i $svideo -pix_fmt yuv420p -vcodec libx264 $mp4
			#HandBrakeCLI  -i "$saudio" -i "$svideo" -o $mp4
			#avconv  -i "$saudio" -i "$svideo"  -c:a libvorbis -b:a 96k -c:v libx264 -b:v 345k -pix_fmt yuv420p $mp4
			
			#mv "/tmp/$mp4" "$mp4"
			time_end=`date +%s`
			time_elapsed=$((time_end - time_start))    
			echo "Done: " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s " *****"
			echo "$mp4= " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s >>$T			
        fi 
    
        # Create WEBM 
        webm="$filename.webm"
        webm_tmp="_$webm"
        webm_log="$filename.log"
        if [ -f "$webm" ]
        then
			echo "***** Exist: $webm"
		elif [ "$extension" == "webm" ]
        then       
			cp "$source" "$webm"
			echo "***** Copy: $webm"
		else        
   			time_start=`date +%s`
			echo "***** Convert: $webm"
			
			if [ -f "$svideo" ]
			then
				#vpxenc "$svideo" -o "$webm_tmp" \
				#  --i420 -p 2 -t 4 \
				#  --good --cpu-used=0 --target-bitrate=2000 --end-usage=vbr \
				#  --auto-alt-ref=1 --fps=30000/1001 -v \
				#  --minsection-pct=15 --maxsection-pct=400 \
				#  --lag-in-frames=16 --profile=1 \
				#  --kf-min-dist=0 --kf-max-dist=360 --static-thresh=0 \
				#  --min-q=4 --max-q=63

				avconv -i "$saudio" -i "$svideo" -b:a 64k -b:v 2000k  "$webm"
			else
				#avconv -pass 1 -passlogfile "$webm" -threads 16  \
				#	-qmin 1 -qmax 51  -i "$source" \
				#	"$webm_tmp"
				
				#avconv -pass 2 -passlogfile "$webm" -threads 16  \
				#	-qmin 1 -qmax 51  -i "$source" \
				#	-c:a libvorbis -c:v libvpx  $webm	
				avconv -i "$source"  -b:a 64k -b:v 2000k $webm
				#avconv -qmin 1 -qmax 51 -i "$source" $webm	
				#avconv-y-i rtsp :/ / xxxx/live1.sdp-vf scale = 640:480-r 7-vcodec rawvideo-acodec copy-f rawvideo - |. / vpxenc - ivf - codec = vp8 - fps = 7000/1000 - i420-w 640-h 480 - best-v-o - | avconv-threads 4-i - r 7-vcodec copy-an-f webm http://localhost:9090/publish/ first? password = secret		
			fi
								
			time_end=`date +%s`
			time_elapsed=$((time_end - time_start))    
			echo "Done: " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s " *****"
			echo "$webm= " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s >>$T					
			  
        fi
        
        # Create OGV
        ogv="$filename.ogv" 
        if [ -f "$ogv" ]
        then
			echo "***** Exist: $ogv"
		elif [ "$extension" == "ogv" ]
        then
			cp "$source" "$ogv"
			echo "***** Copy: $ogv"
		else        
   			time_start=`date +%s`
			echo "***** Convert: $ogv"
   			
			#ffmpeg2theora --videoquality 5 --audioquality 1 "$source" -o "$ogv" 
			avconv -qmin 1 -qmax 51 -i "$source" "$ogv"

			time_end=`date +%s`
			time_elapsed=$((time_end - time_start))    
			echo "Done: " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s " *****"
			echo "$ogv= " $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s >>$T			
			
        fi        
        
        # Create png
        poster="$filename.png"
        if [ -f "$poster" ]
        then
			echo "***** Exist: $poster"
		else
			avconv  -ss "$number" -i "$mp4" -f image2 -frames:v 1 "$poster"
			echo "***** Convert: $poster" 
        fi

		
		# Clean UP
		if [ -f "$saudio" ]; then rm "$webm_tmp" ; fi
		if [ -f "$svideo" ]; then rm "$svideo"; fi
		if [ -f "$saudio" ]; then rm "$saudio"; fi
		#rm *.log		
		echo "$done">>$T		
		
		echo "Done: $T"	
		

    done
    
    #Create JSON item
    echo "All Done!"
else
    echo "Usage: [$filename]"
fi
#end of script
time_end=`date +%s`
time_elapsed=$((time_end - time_start_total))    
echo "script executed in $time_elapsed seconds" $(( time_elapsed / 60 ))m $(( time_elapsed % 60 ))s	
